{"version":3,"sources":["ui-component/cards/SubCard.js","ui-component/extended/Avatar.js","ui-component/cards/Skeleton/APICard.js","views/News.js"],"names":["SubCard","children","content","contentClass","darkTitle","secondary","sx","title","others","theme","useTheme","border","borderColor","palette","primary","light","boxShadow","p","variant","action","opacity","className","defaultProps","makeStyles","primaryBackground","background","main","color","paper","secondaryBackground","errorBackground","error","warningBackground","warning","dark","infoBackground","info","successBackground","success","greyBackground","grey","primaryOutline","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","badge","width","spacing","height","xs","sm","md","lg","xl","useStyles","cardAction","padding","display","paddingTop","justifyContent","APICard","backtest","container","gridSpacing","item","alignItems","zeroMinWidth","News","useState","dataset","setDataset","account","useSelector","state","useEffect","url","configData","API_SERVER","axios","get","headers","Authorization","token","then","response","data","map","index","cursor","mb","publishedDate","src","image","onClick","window","open","sentiment","m","label","Math","round","tags","a","i","gutterBottom","text"],"mappings":"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","file":"static/js/16.227d6000.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\r\n\r\n//-----------------------|| CUSTOM SUB CARD ||-----------------------//\r\n\r\nconst SubCard = ({ children, content, contentClass, darkTitle, secondary, sx = {}, title, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                border: '1px solid',\r\n                borderColor: theme.palette.primary.light,\r\n                ':hover': {\r\n                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                },\r\n                ...sx\r\n            }}\r\n            {...others}\r\n        >\r\n            {/* card header and action */}\r\n            {!darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\r\n            {darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />}\r\n\r\n            {/* content & header divider */}\r\n            {title && (\r\n                <Divider\r\n                    sx={{\r\n                        opacity: 1,\r\n                        borderColor: theme.palette.primary.light\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* card content */}\r\n            {content && (\r\n                <CardContent sx={{ p: 2.5 }} className={contentClass}>\r\n                    {children}\r\n                </CardContent>\r\n            )}\r\n            {!content && children}\r\n        </Card>\r\n    );\r\n};\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: '2px solid ' + theme.palette.primary.main\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: '2px solid ' + theme.palette.secondary.main\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: '2px solid ' + theme.palette.error.main\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: '2px solid ' + theme.palette.warning.dark\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: '2px solid ' + theme.palette.info.main\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: '2px solid ' + theme.palette.success.dark\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: '2px solid ' + theme.palette.grey[500]\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n//-----------------------|| AVATAR ||-----------------------//\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    avatarClass = color\r\n        ? outline\r\n            ? [classes[color + 'Outline'], ...avatarClass]\r\n            : [classes[color + 'Background'], ...avatarClass]\r\n        : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Skeleton, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    cardAction: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\r\n\r\nconst APICard = ({ backtest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                            <Grid item xs zeroMinWidth>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Skeleton variant=\"rect\" height={20} width={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default APICard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SET_DATA_API } from 'store/actions';\r\n\r\n// material-ui\r\nimport { Grid, Link, Chip, Typography, CardContent, Card, Box, Avatar } from '@material-ui/core';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport APICard from 'ui-component/cards/Skeleton/APICard';\r\n\r\nimport { gridSpacing } from 'store/constant';\r\nimport configData from 'config';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport axios from 'axios'\r\n//==============================|| TYPOGRAPHY ||==============================//\r\n\r\nconst News = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [dataset, setDataset] = useState([]);\r\n    const theme = useTheme();\r\n    const account = useSelector((state) => state.account);\r\n    \r\n    useEffect(() => {\r\n        const url = configData.API_SERVER+\"news\";\r\n        axios.get(url, { headers: { Authorization: `${account.token}` }})\r\n            .then((response) => setDataset(response.data))\r\n    }, []);\r\n\r\n    return (\r\n        // <MainCard title=\"News\">\r\n            <Grid container spacing={gridSpacing}>\r\n                {dataset.map((item, index) => (\r\n                    <Grid item xs={12} md={6} key={index+''}>\r\n                        <SubCard\r\n                            sx={{cursor: \"pointer\"}}\r\n                            title={\r\n                                <Grid container>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography variant=\"h3\" sx={{ mb: 1}} >\r\n                                            { item.title }\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\">\r\n                                            {item.publishedDate}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={3} justifyContent=\"right\">\r\n                                        <Avatar sx={{ width: 64, height: 64 }} src={item.image} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                            onClick={() => window.open(item.url)}>\r\n                            <Grid container item spacing={gridSpacing}>\r\n                                <Grid item xs={12}>\r\n                                    {item.sentiment>0 && <Chip variant=\"outlined\" sx={{m:1}} color=\"success\" label={\"Sentiment: \"+ Math.round(item.sentiment*100)/100 }></Chip>}\r\n                                    {item.sentiment<=0 && <Chip variant=\"outlined\" sx={{m:1}} color=\"error\" label={\"Sentiment: \"+ Math.round(item.sentiment*100)/100 }></Chip>}\r\n                                    {item.tags && item.tags.map((a, i) =>\r\n                                        (<Chip variant=\"outlined\" sx={{m:1}} label={a} key={i+''}></Chip>)\r\n                                    )}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {item.text}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        // </MainCard>\r\n    );\r\n};\r\n\r\nexport default News;\r\n"],"sourceRoot":""}