{"version":3,"sources":["ui-component/extended/AnimateButton.js","../node_modules/@material-ui/core/TextField/textFieldClasses.js","../node_modules/@material-ui/core/TextField/TextField.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","utils/password-strength.js","views/pages/authentication/register/RestRegister.js","views/pages/authentication/register/index.js"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","getTextFieldUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","styled","FormControl","name","overridesResolver","props","styles","root","TextField","inProps","useThemeProps","autoComplete","autoFocus","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","value","variant","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","undefined","helperTextId","inputLabelId","InputComponent","InputElement","_jsx","clsx","InputLabel","htmlFor","Select","labelId","input","FormHelperText","AuthWrapper1","backgroundColor","theme","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","contentClass","useScriptRef","scripted","useRef","useEffect","current","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","redButton","fontSize","fontWeight","grey","border","borderColor","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","RestRegister","others","history","useHistory","scriptedRef","matchDownSM","useMediaQuery","useState","showPassword","setShowPassword","checked","setChecked","setStrength","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","count","temp","errorMain","warningDark","orangeMain","successMain","successDark","Fragment","initialValues","username","email","password","submit","validationSchema","Yup","shape","max","onSubmit","values","setErrors","setStatus","setSubmitting","axios","post","configData","API_SERVER","then","response","data","success","push","msg","catch","err","console","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","item","xs","Boolean","notchedOutline","e","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","alignItems","justifyContent","FormControlLabel","control","Checkbox","Typography","component","Link","to","Box","sx","mt","Button","disableElevation","size","Register","useTheme","m","sm","mb","Logo","Stack","secondary","main","gutterBottom","textAlign","Divider","RouterLink","textDecoration"],"mappings":"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","file":"static/js/13.4b5017fb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n//-----------------------|| ANIMATION BUTTON ||-----------------------//\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'dow':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div ref={ref} animate={{ y: y }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <motion.div ref={ref} animate={{ x: x }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale.hover }} whileTap={{ scale: scale.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { refType } from '@material-ui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","// material-ui\r\nimport { styled } from '@material-ui/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport configData from 'config';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n//===========================|| API JWT - REGISTER ||===========================//\r\n\r\nconst RestRegister = ({ ...others }) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    username: Yup.string().required('Username is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        axios\r\n                            .post( configData.API_SERVER + 'users/register', {\r\n                                username: values.username,\r\n                                password: values.password,\r\n                                email: values.email\r\n                            })\r\n                            .then(function (response) {\r\n                                if (response.data.success) {\r\n                                    history.push('/login');\r\n                                } else {\r\n                                    setStatus({ success: false });\r\n                                    setErrors({ submit: response.data.msg });\r\n                                    setSubmitting(false);\r\n                                }\r\n                            })\r\n                            .catch(function (error) {\r\n                                setStatus({ success: false });\r\n                                setErrors({ submit: error.response.data.msg });\r\n                                setSubmitting(false);\r\n                            });\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Username\"\r\n                                    margin=\"normal\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    type=\"text\"\r\n                                    value={values.username}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    className={classes.loginInput}\r\n                                    error={touched.username && Boolean(errors.username)}\r\n                                />\r\n                                {touched.username && errors.username && (\r\n                                    <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                        {errors.username}\r\n                                    </FormHelperText>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box\r\n                                    sx={{\r\n                                        mb: 2\r\n                                    }}\r\n                                >\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                backgroundColor={level.color}\r\n                                                sx={{\r\n                                                    width: 85,\r\n                                                    height: 8,\r\n                                                    borderRadius: '7px'\r\n                                                }}\r\n                                            ></Box>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )} */}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign Up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RestRegister;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper1 from 'views/pages/authentication/AuthWrapper1';\r\nimport AuthCardWrapper from 'views/pages/authentication/AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport RestRegister from 'views/pages/authentication/register/RestRegister';\r\n\r\n// assets\r\n\r\n//===============================|| AUTH3 - REGISTER ||===============================//\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign Up\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <RestRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={RouterLink}\r\n                                                to=\"/login\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid> */}\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}