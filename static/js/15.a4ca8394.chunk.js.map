{"version":3,"sources":["ui-component/extended/AnimateButton.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","views/pages/authentication/login/RestLogin.js","views/pages/authentication/login/index.js"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","other","classes","className","contentClass","useScriptRef","scripted","useRef","useEffect","current","redButton","fontSize","fontWeight","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","RestLogin","props","others","dispatcher","useDispatch","scriptedRef","useState","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","axios","post","configData","API_SERVER","then","response","data","success","console","log","ACCOUNT_INITIALIZE","payload","isLoggedIn","user","token","msg","catch","error","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Stack","alignItems","justifyContent","FormControlLabel","control","Checkbox","target","Typography","variant","component","Link","to","login","sx","textDecoration","Box","mt","Button","disableElevation","disabled","size","Login","useTheme","matchDownSM","useMediaQuery","Grid","container","item","xs","m","sm","mb","Logo","secondary","main","gutterBottom","Divider","RouterLink"],"mappings":"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","file":"static/js/15.a4ca8394.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n//-----------------------|| ANIMATION BUTTON ||-----------------------//\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'dow':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div ref={ref} animate={{ y: y }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <motion.div ref={ref} animate={{ x: x }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale.hover }} whileTap={{ scale: scale.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","// material-ui\r\nimport { styled } from '@material-ui/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport configData from 'config';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { ACCOUNT_INITIALIZE } from 'store/actions';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n//============================|| API JWT - LOGIN ||============================//\r\n\r\nconst RestLogin = (props, { ...others }) => {\r\n    const classes = useStyles();\r\n    const dispatcher = useDispatch();\r\n\r\n    const scriptedRef = useScriptRef();\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        axios\r\n                            .post( configData.API_SERVER + 'users/login', {\r\n                                password: values.password,\r\n                                email: values.email\r\n                            })\r\n                            .then(function (response) {\r\n                                if (response.data.success) {\r\n                                    console.log(response.data);\r\n                                    dispatcher({\r\n                                        type: ACCOUNT_INITIALIZE,\r\n                                        payload: { isLoggedIn: true, user: response.data.user, token: response.data.token }\r\n                                    });\r\n                                    if (scriptedRef.current) {\r\n                                        setStatus({ success: true });\r\n                                        setSubmitting(false);\r\n                                    }\r\n                                } else {\r\n                                    setStatus({ success: false });\r\n                                    setErrors({ submit: response.data.msg });\r\n                                    setSubmitting(false);\r\n                                }\r\n                            })\r\n                            .catch(function (error) {\r\n                                setStatus({ success: false });\r\n                                setErrors({ submit: error.response.data.msg });\r\n                                setSubmitting(false);\r\n                            });\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={props.login ? '/pages/forgot-password/forgot-password' + props.login : '#'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RestLogin;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper1 from 'views/pages/authentication/AuthWrapper1';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthCardWrapper from 'views/pages/authentication/AuthCardWrapper';\r\nimport RestLogin from 'views/pages/authentication/login/RestLogin';\r\n\r\n// assets\r\n\r\n//================================|| LOGIN MAIN ||================================//\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 0 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign in to Quantria\r\n                                                    </Typography>\r\n                                                    {/* <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Default credentials: <strong>test@appseed.us / pass</strong>\r\n                                                    </Typography> */}\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <RestLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={RouterLink}\r\n                                                to=\"/register\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Don't have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid> */}\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}