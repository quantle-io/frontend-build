{"version":3,"sources":["ui-component/cards/SubCard.js","views/dashboard/Default/chart-data/stock-chart.js","views/dashboard/Default/StockChartCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/StockCard.js","../node_modules/@material-ui/core/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/Table/TableContext.js","../node_modules/@material-ui/core/FormHelperText/formHelperTextClasses.js","../node_modules/@material-ui/core/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/TextField/textFieldClasses.js","../node_modules/@material-ui/core/TextField/TextField.js","../node_modules/@material-ui/core/TableContainer/tableContainerClasses.js","../node_modules/@material-ui/core/TableContainer/TableContainer.js","../node_modules/@material-ui/core/Table/tableClasses.js","../node_modules/@material-ui/core/Table/Table.js","../node_modules/@material-ui/core/TableHead/tableHeadClasses.js","../node_modules/@material-ui/core/TableHead/TableHead.js","../node_modules/@material-ui/core/TableRow/tableRowClasses.js","../node_modules/@material-ui/core/TableRow/TableRow.js","../node_modules/@material-ui/core/TableCell/tableCellClasses.js","../node_modules/@material-ui/core/TableCell/TableCell.js","../node_modules/@material-ui/core/TableBody/tableBodyClasses.js","../node_modules/@material-ui/core/TableBody/TableBody.js","views/StrategiesPage.js"],"names":["SubCard","children","content","contentClass","darkTitle","secondary","sx","title","others","theme","useTheme","border","borderColor","palette","primary","light","boxShadow","p","variant","action","opacity","className","defaultProps","ChartData","extra","extra2","height","length","type","options","colors","chart","sparkline","enabled","animations","stroke","curve","width","xaxis","labels","show","tooltip","shared","fixed","position","x","format","y","formatter","seriesName","series","name","data","useStyles","makeStyles","card","backgroundColor","padding","contentContainer","paddingBottom","color","fontStyle","fontWeight","StockChartCard","annual_ret","dataset","white","benchmark","classes","Card","CardContent","Grid","container","item","xs","alignItems","justifyContent","Typography","dark","error","main","Math","round","success","grey","cardAction","display","paddingTop","PopularCard","backtest","spacing","gridSpacing","zeroMinWidth","Skeleton","style","textAlign","flexDirection","primaryLight","cursor","divider","marginTop","marginBottom","avatarSuccess","borderRadius","marginLeft","successDark","avatarError","orange","errorDark","StockCard","isLoading","subscribed","React","useState","Fragment","MainCard","alignContent","Chip","label","float","pt","direction","Object","entries","map","key","value","Tablelvl2Context","TableContext","getFormHelperTextUtilityClasses","slot","generateUtilityClass","formHelperTextClasses","generateUtilityClasses","_excluded","FormHelperTextRoot","styled","overridesResolver","props","styles","ownerState","root","size","capitalize","contained","filled","_extends","text","typography","caption","marginRight","disabled","FormHelperText","inProps","ref","useThemeProps","component","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","focused","required","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","dangerouslySetInnerHTML","__html","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","TextField","autoComplete","autoFocus","defaultValue","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","maxRows","minRows","multiline","onBlur","onChange","onFocus","placeholder","rows","select","SelectProps","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","undefined","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","htmlFor","Select","labelId","input","getTableContainerUtilityClass","TableContainerRoot","overflowX","TableContainer","getTableUtilityClass","TableRoot","stickyHeader","borderCollapse","borderSpacing","body2","captionSide","defaultComponent","Table","table","Provider","role","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","TableHead","getTableRowUtilityClass","tableRowClasses","TableRowRoot","head","footer","verticalAlign","outline","hover","selected","alpha","selectedOpacity","hoverOpacity","TableRow","getTableCellUtilityClass","tableCellClasses","TableCellRoot","align","borderBottom","mode","lighten","darken","lineHeight","pxToRem","fontWeightMedium","fontSize","paddingCheckbox","top","zIndex","background","default","TableCell","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","getTableBodyUtilityClass","TableBodyRoot","TableBody","StrategiesPage","setLoading","setDataset","account","useSelector","state","useParams","setValue","tempValue","setTempValue","useEffect","url","configData","API_SERVER","axios","get","headers","Authorization","token","then","response","results","lg","md","onClick","post","params","strategy_id","console","log","handleUnsubscribe","handleSubscribe","slice","mt","getAriaLabel","t","target","onChangeCommitted","valueLabelDisplay","valueLabelFormat","day","floor","Date","toLocaleDateString","disableSwap","graphs","closed_positions","row","asset","qty","pl_dollars","entry_time","exit_time","mb","stats","score","annualized_return","annualized_sharpe","mdd","description"],"mappings":"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","file":"static/js/11.6161de2e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\r\n\r\n//-----------------------|| CUSTOM SUB CARD ||-----------------------//\r\n\r\nconst SubCard = ({ children, content, contentClass, darkTitle, secondary, sx = {}, title, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                border: '1px solid',\r\n                borderColor: theme.palette.primary.light,\r\n                ':hover': {\r\n                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                },\r\n                ...sx\r\n            }}\r\n            {...others}\r\n        >\r\n            {/* card header and action */}\r\n            {!darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\r\n            {darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />}\r\n\r\n            {/* content & header divider */}\r\n            {title && (\r\n                <Divider\r\n                    sx={{\r\n                        opacity: 1,\r\n                        borderColor: theme.palette.primary.light\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* card content */}\r\n            {content && (\r\n                <CardContent sx={{ p: 2.5 }} className={contentClass}>\r\n                    {children}\r\n                </CardContent>\r\n            )}\r\n            {!content && children}\r\n        </Card>\r\n    );\r\n};\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n","//-----------------------|| DASHBOARD - BAJAJ AREA CHART ||-----------------------//\r\n\r\nconst ChartData = ({extra = [], extra2 = []}) => {\r\n    let height = 200;\r\n    if (extra2 && extra2.length != 0){\r\n        height = 400;\r\n    }\r\n    // let extra3 = [];\r\n    // for (let i = 0; i<extra2.length; i++){\r\n    //     const arr = [extra2[i][1]-100, extra2[i][1]+100];\r\n    //     extra3.push({\r\n    //         x: extra2[i][0], \r\n    //         y: arr\r\n    //     });\r\n    // }\r\n    \r\n    return {\r\n        type: 'area',\r\n        height: height,\r\n        options: {\r\n            colors: ['#1e88e5', '#808080'],\r\n            chart: {\r\n                // id: 'support-chart',\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n                animations: {\r\n                    enabled: false\r\n                },\r\n\r\n            },\r\n            // dataLabels: {\r\n            //     enabled: false\r\n            // },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                width: 3\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n                labels: {show: true},\r\n                // axisTickers: {show: true}\r\n            },    \r\n            tooltip: {\r\n                // theme: 'dark',\r\n                shared: true,\r\n                fixed: {\r\n                    enabled: true,\r\n                    position: 'topLeft'\r\n                },\r\n                x: {\r\n                    show: true,\r\n                    format: 'MMM dd yyyy' // 'MMM dd yyyy, HH:mm:ss'\r\n                },\r\n                y: {\r\n                    title: {\r\n                        formatter: (seriesName) => seriesName+' Value'\r\n                    }\r\n                },\r\n                // marker: {\r\n                //     show: false\r\n                // }\r\n            },\r\n            // tooltip: {\r\n            //     fixed: {\r\n            //         enabled: false\r\n            //     },\r\n            //     x: {\r\n            //         show: true,\r\n            //     },\r\n            //     y: {\r\n            //         title: {\r\n            //             formatter: (seriesName) => 'Account Value'\r\n            //         }\r\n            //     },\r\n            //     // marker: {\r\n            //     //     show: false\r\n            //     // }\r\n            // },\r\n            // xaxis:{\r\n            //     labels: {\r\n            //         show: true,\r\n            //     }                \r\n            // },\r\n        },\r\n        series: [\r\n                {\r\n                    name: \"Strategy\",\r\n                    data: extra\r\n                },\r\n                {\r\n                    name: \"Benchmark\",\r\n                    data: extra2\r\n                },\r\n                // {\r\n                //     name: \"Standard Deviation\",\r\n                //     type: 'rangeArea',\r\n                //     data: extra3\r\n                // }\r\n            ],\r\n        }\r\n    };\r\n\r\nexport default ChartData;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport ChartData from 'views/dashboard/Default/chart-data/stock-chart';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.secondary.light\r\n    },\r\n    content: {\r\n        padding: '0px !important'\r\n    },\r\n    contentContainer: {\r\n        padding: '16px',\r\n        paddingBottom: 0,\r\n        color: '#fff'\r\n    },\r\n    fontStyle: {\r\n        fontWeight: 400\r\n    }\r\n}));\r\n\r\n\r\nconst StockChartCard = ({ annual_ret, dataset, white, benchmark, title }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const orangeDark = theme.palette.secondary[800];\r\n\r\n    // console.log(dataset);\r\n    return (\r\n        <Card className={white ? \"\": classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <Grid container className={classes.contentContainer}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            {white ? \r\n                            <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                { title ? title : '' }\r\n                            </Typography>\r\n                            :<Grid item>\r\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                    Historical Performance\r\n                                </Typography>\r\n                            </Grid>}\r\n                            <Grid item>\r\n                                {annual_ret && annual_ret < 0 ?\r\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.error.main }}>\r\n                                    {Math.round(annual_ret*100)/100}%\r\n                                </Typography> : annual_ret ?\r\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.success.main }}>\r\n                                    {Math.round(annual_ret*100)/100}%\r\n                                </Typography>\r\n                                : <></>}\r\n                                {annual_ret ?\r\n                                <Typography alignItems=\"right\" variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>annually</Typography>\r\n                                : <></>}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Chart {...ChartData({extra: dataset, extra2: benchmark})} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StockChartCard;\r\n","import React from 'react';\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Skeleton, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    cardAction: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\r\n\r\nconst PopularCard = ({ backtest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                            <Grid item xs zeroMinWidth>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Skeleton variant=\"rect\" height={20} width={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {backtest ?\r\n                        <Grid item xs={12} style={{height: 250, textAlign:\"center\", flexDirection: \"column\", justifyContent: \"center\", display: \"flex\"}}>\r\n                            <Typography variant=\"h4\">📈 Backtest to see results!</Typography>\r\n                        </Grid>:\r\n                        <Skeleton variant=\"rect\" height={250} />\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { CardContent, Grid, Typography, Chip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport StockChartCard from 'views/dashboard/Default/StockChartCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\r\n\r\nconst StockCard = ({ isLoading, data, backtest, subscribed}) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // var mergedTimes = [];\r\n    // for (var i = 0; i<data[\"graphs\"][\"Equity Curve\"].length; i++){\r\n    //     mergedTimes.push(data[\"graphs\"][\"Equity Curve\"][i]);\r\n    // }\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard backtest={backtest} />\r\n            ) : (\r\n                <MainCard content={false} sx={{cursor: \"pointer\"}}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item xs={12} height={\"32px\"}>\r\n                                        <Typography display=\"inline\" variant=\"h4\">{data.name}</Typography>\r\n                                        {subscribed && <Chip label=\"Subscribed\" color=\"primary\" sx={{float: \"right\"}}/>}                                        \r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ pt: '16px !important', textAlign:\"center\", flexDirection: \"column\" }}>\r\n                                {(!data[\"results\"][\"graphs\"][\"chart\"].length) ?                             \r\n                                <Typography variant=\"h4\">📈</Typography>\r\n                                : <StockChartCard annual_ret ={data[\"results\"][\"stats\"] ? data[\"results\"][\"stats\"][\"annualized_return\"]: 0} dataset={data[\"results\"][\"graphs\"][\"chart\"]} />\r\n                                }\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    {\r\n                                    Object.entries(data[\"results\"][\"stats\"])\r\n                                    .map(([key, value]) =>\r\n                                    <Grid item key={key}>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {key}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            {Math.round(value * 100) / 100}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    {/* <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid> */}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                \r\n\r\n                                    )}\r\n\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    {/* <CardActions className={classes.cardAction}>\r\n                        <Button size=\"small\" disableElevation>\r\n                            View All\r\n                            <ChevronRightOutlinedIcon />\r\n                        </Button>\r\n                    </CardActions> */}\r\n                </MainCard>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nStockCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default StockCard;\r\n","import * as React from 'react';\n/**\r\n * @ignore - internal component.\r\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\r\n * @ignore - internal component.\r\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: theme.palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { refType } from '@material-ui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableHead;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { darken, alpha, lighten } from '@material-ui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: theme.palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: theme.palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: theme.palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: theme.palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableBody;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SET_DATA } from 'store/actions';\r\n\r\n// material-ui\r\nimport { Grid, Table, TableContainer, TableBody, TableHead, TableRow, TableCell, Typography, Slider, TextField, Chip } from '@material-ui/core';\r\nimport StockChartCard from 'views/dashboard/Default/StockChartCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nimport StockCard from 'views/dashboard/Default/StockCard';\r\nimport SubCard from 'ui-component/cards/SubCard'\r\nimport configData from 'config';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\n\r\nimport axios from 'axios';\r\n//==============================|| TYPOGRAPHY ||==============================//\r\n\r\nconst StrategiesPage = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [dataset, setDataset] = useState({});\r\n    const account = useSelector((state) => state.account);\r\n    let { id } = useParams();\r\n    const [value, setValue]  = useState([0, 100]);\r\n    const [tempValue, setTempValue]  = useState([0, 100]);\r\n    const theme = useTheme();\r\n\r\n    const handleSubscribe = (id) => {\r\n        const url = configData.API_SERVER+\"users/strategy_subscribe\";\r\n        axios.post(url, {}, { headers: { Authorization: `${account.token}` }, params: {strategy_id: id} })\r\n            .then((response) => console.log(response))\r\n\r\n        setDataset({...dataset, subscribed: true});\r\n    }\r\n\r\n    const handleUnsubscribe = (id) => {\r\n        const url = configData.API_SERVER+\"users/strategy_unsubscribe\";\r\n        axios.post(url, {}, { headers: { Authorization: `${account.token}` }, params: {strategy_id: id} })\r\n            .then((response) => console.log(response))\r\n        \r\n        setDataset({...dataset, subscribed: false});\r\n    }\r\n\r\n    const handleChange = (t) =>{\r\n        setValue(tempValue);\r\n    }\r\n\r\n    const handleChangeTemp = (t) =>{\r\n        setTempValue(t.target.value);\r\n    }\r\n\r\n    const formatter = (x) =>{\r\n        let day = Math.floor(x*dataset[\"results\"][\"graphs\"][\"chart\"].length/100);\r\n        if (day == dataset[\"results\"][\"graphs\"][\"chart\"].length){\r\n            day = day-1;\r\n        }\r\n        return (new Date(dataset[\"results\"][\"graphs\"][\"chart\"][day][0]).toLocaleDateString());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const url = configData.API_SERVER+\"strategies/\"+id;\r\n        axios.get(url, { headers: { Authorization: `${account.token}` } })\r\n          .then((response) => setDataset(response.data))\r\n          .then(() => setLoading(false))\r\n    }, []);\r\n\r\n\r\n    return (\r\n            <Grid container spacing={gridSpacing} justifyContent=\"center\">\r\n                {(!dataset.results || !dataset[\"results\"][\"graphs\"][\"chart\"].length || !dataset[\"results\"][\"graphs\"][\"benchmark\"].length) ? \r\n                <Typography variant=\"h1\"></Typography> : \r\n                <Grid item lg={8} xs={12} justifyContent=\"center\" align=\"center\">\r\n                    <MainCard>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h1\" align=\"left\">\r\n                                    {dataset.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h1\" align=\"right\">\r\n                                    {!dataset.subscribed ? \r\n                                    <Chip label=\"Subscribe\" variant=\"outlined\" onClick={() => handleSubscribe(dataset.id)}/>\r\n                                    : <Chip label=\"Unsubscribe\" onClick={() => handleUnsubscribe(dataset.id)}/>\r\n                                    }\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <StockChartCard \r\n                            white={true} \r\n                            dataset={dataset[\"results\"][\"graphs\"][\"chart\"].slice(value[0]*dataset[\"results\"][\"graphs\"][\"chart\"].length/100, value[1]*dataset[\"results\"][\"graphs\"][\"chart\"].length/100)}\r\n                            benchmark={dataset[\"results\"][\"graphs\"][\"benchmark\"].slice(value[0]*dataset[\"results\"][\"graphs\"][\"benchmark\"].length/100, value[1]*dataset[\"results\"][\"graphs\"][\"benchmark\"].length/100)} \r\n                        />\r\n                    </MainCard>\r\n                    <Grid item xs={10} justifyContent=\"center\" >\r\n                    <Slider\r\n                        sx={{ mt: 6}}\r\n                        getAriaLabel={() => 'Date range'}\r\n                        value={tempValue}\r\n                        onChange={handleChangeTemp}\r\n                        onChangeCommitted={handleChange}\r\n                        valueLabelDisplay=\"on\"\r\n                        valueLabelFormat={(x) => formatter(x)}\r\n                        disableSwap\r\n                        // getAriaValueText={valuetext}\r\n                        />\r\n                        </Grid>\r\n\r\n                </Grid>}\r\n                {dataset.results ?\r\n                <Grid container item xs={12} justifyContent=\"center\" spacing={gridSpacing}>\r\n                    <Grid item xs={12} lg={6} justifyContent=\"center\">\r\n                        <SubCard>\r\n                            <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h1\" >\r\n                                        Recent Trades\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justifyContent=\"center\">\r\n                                {dataset.results ? \r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"left\">Asset</TableCell>\r\n                                                <TableCell align=\"left\">Quantity</TableCell>\r\n                                                <TableCell align=\"left\">P/L</TableCell>\r\n                                                <TableCell align=\"left\">Entry Time</TableCell>\r\n                                                <TableCell align=\"left\">Exit Time</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {(dataset.results.graphs.closed_positions).map((row) => (\r\n                                            <TableRow\r\n                                            key={row.asset+row.exit_time}\r\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                            >\r\n                                                <TableCell align=\"left\" component=\"th\" scope=\"row\">{row.asset}</TableCell>\r\n                                                <TableCell align=\"left\">{row.qty}</TableCell>\r\n                                                <TableCell align=\"left\">{row.pl_dollars}</TableCell>\r\n                                                <TableCell align=\"left\">{row.entry_time}</TableCell>\r\n                                                <TableCell align=\"left\">{row.exit_time}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>: <></>}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6} justifyContent=\"center\">\r\n                        <SubCard>\r\n                            <Typography variant=\"h1\" sx={{ mb: 4 }}>\r\n                                Details\r\n                            </Typography>\r\n                            <Grid container spacing={gridSpacing} sx={{ mb: 4 }}>\r\n                                <Grid item xs={6} justifyContent=\"center\" align=\"center\">\r\n                                    <Typography display=\"inline\" variant=\"h1\" sx={{ fontWeight: 'regular'}}>\r\n                                        {dataset.results ? dataset.results.stats.score: 0} \r\n                                    </Typography>\r\n                                    <Typography display=\"inline\" variant=\"h4\">/5</Typography>\r\n                                    <Typography variant=\"h2\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                        Risk Score\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} justifyContent=\"center\" align=\"center\">\r\n                                    <Typography variant=\"h1\" sx={{ fontWeight: 'regular' }}>\r\n                                        {dataset.results ? dataset.results.stats.annualized_return: 0}%\r\n                                    </Typography>\r\n                                    <Typography variant=\"h2\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                        Annualized Return\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} justifyContent=\"center\" align=\"center\">\r\n                                    <Typography variant=\"h1\" sx={{ fontWeight: 'regular' }}>\r\n                                        {dataset.results ? dataset.results.stats.annualized_sharpe: 0}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h2\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                        Sharpe\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} justifyContent=\"center\" align=\"center\">\r\n                                    <Typography variant=\"h1\" sx={{ fontWeight: 'regular' }}>\r\n                                        {dataset.results ? dataset.results.stats.mdd: 0}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h2\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                        Max Drawdown\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={gridSpacing}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h2\">\r\n                                        Description\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\" sx={{ fontWeight: 'regular' }}>\r\n                                        {dataset.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container item justifyContent=\"center\" xs={12}>\r\n                                    <TextField fullWidth id=\"outlined-basic\" label=\"Shareable URL\" variant=\"outlined\" value={\"https://quantria.io/utils/strategies/\"+dataset[\"id\"]} disabled />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n\r\n                </Grid>: <></>}\r\n\r\n                {/* {dataset.map(item => (\r\n                    <Grid item key={item.name} xs={12} md={6} lg={4}>\r\n                        <StockCard isLoading={isLoading} data={item}/>\r\n                    </Grid>\r\n                ))} */}\r\n            </Grid>\r\n    );\r\n};\r\n\r\nexport default StrategiesPage;\r\n"],"sourceRoot":""}